package abi

type OpCode int

const (
	NEW_SCOPE OpCode = iota
	DELETE_SCOPE

	PUSH_CHAR
	PUSH_SHORT
	PUSH_INT
	PUSH_LONG
	PUSH_STRING

	POP

	BEGIN_STRUCT
	APPEND_VOID
	APPEND_CHAR
	APPEND_SHORT
	APPEND_INT
	APPEND_LONG
	APPEND_STRUCT
	END_STRUCT

	NEW_GLOBAL_VOID
	NEW_GLOBAL_CHAR
	NEW_GLOBAL_SHORT
	NEW_GLOBAL_INT
	NEW_GLOBAL_LONG

	NEW_FAST_VOID
	NEW_FAST_CHAR
	NEW_FAST_SHORT
	NEW_FAST_INT
	NEW_FAST_LONG
	NEW_FAST_STRUCT

	NEW_ARG_VOID
	NEW_ARG_CHAR
	NEW_ARG_SHORT
	NEW_ARG_INT
	NEW_ARG_LONG
	NEW_ARG_STRUCT

	NEW_RETURN_VOID
	NEW_RETURN_CHAR
	NEW_RETURN_SHORT
	NEW_RETURN_INT
	NEW_RETURN_LONG
	NEW_RETURN_STRUCT

	SIZEOF_VOID
	SIZEOF_CHAR
	SIZEOF_SHORT
	SIZEOF_INT
	SIZEOF_LONG
	SIZEOF_STRUCT

	GET_IDENTIFIER
	GET_ARG_IDENTIFIER

	GET_SUBSCRIPT
	GET_ACCESS
	GET_REFERENCE
	GET_ADDRESS
	GET_VALUE

	ALLOC
	FREE

	ASSERT

	ADD
	SUB
	MUL
	DIV
	MOD

	LSHIFT
	RSHIFT

	NEGATE
	TILDE
	SQRT

	BITWISE_AND
	BITWISE_XOR
	BITWISE_OR

	LOGICAL_AND
	LOGICAL_OR
	LOGICAL_NOT

	EQ
	NOT_EQ
	LESS
	LESS_EQ
	GREATER
	GREATER_EQ

	CONDITIONAL

	ASSIGN
	ASSIGN_STAR
	ASSIGN_DIV
	ASSIGN_MOD
	ASSIGN_ADD
	ASSIGN_SUB
	ASSIGN_LSHIFT
	ASSIGN_RSHIFT
	ASSIGN_BITWISE_AND
	ASSIGN_BITWISE_XOR
	ASSIGN_BITWISE_OR
	ASSIGN_PLUS_PLUS
	ASSIGN_MINUS_MINUS
	ASSIGN_RETURN

	JUMP
	JUMP_IF_ZERO
	JUMP_IF_NONZERO

	CALL

	RETURN

	NOP

	DPU_ALLOC
	DPU_LOAD
	DPU_PREPARE
	DPU_TRANSFER
	DPU_COPY_TO
	DPU_COPY_FROM
	DPU_LAUNCH
	DPU_FREE
)
